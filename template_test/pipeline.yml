Parameters:
  GithubAuthToken:
    Type: String
    Description: "Token used by codepipeline to verify if the incoming event comes from the github repo"
    MaxLength: 100
    MinLength: 0
    NoEcho: true
    # AllowedPattern: "[a-z0-9]*"
  GithubBranch:
    Type: String
    Description: "Pipeline branch"
  GithubAccount:
    Type: String
    Description: "Github accound name"
  GithubRepository:
    Type: String
    Description: "Github repository name"
  Cluster:
    Type: String
    Description: "Cluster Name"
  Service:
    Type: String
    Description: "Service Name"

Mappings:
  CodeBuildComputeTypeMap:
    develop:
      type: "BUILD_GENERAL1_SMALL"
    main:
      type: "BUILD_GENERAL1_SMALL"
    prod:
      type: "BUILD_GENERAL1_MEDIUM"


Resources:
  Webhook:
    Type: "AWS::CodePipeline::Webhook"
    Properties:
      Authentication: "GITHUB_HMAC"
      AuthenticationConfiguration:
        SecretToken: !Ref GithubAuthToken
      RegisterWithThirdParty: true
      TargetPipeline: !Ref Pipeline
      TargetAction: Source
      TargetPipelineVersion: !GetAtt Pipeline.Version
      Filters:
        - JsonPath: "$.ref"
          MatchEquals: refs/heads/{Branch}

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: PipelineForSimpleApp
      RoleArn: !GetAtt PipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: "1"
              OutputArtifacts:
                - Name: SourceCode
              Configuration:
                Owner: !Ref GithubAccount
                Repo: !Ref GithubRepository
                PollForSourceChanges: false
                Branch: !Ref GithubBranch
                OAuthToken: !Ref GithubAuthToken
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              InputArtifacts:
                - Name: SourceCode
              Configuration:
                ProjectName: !Ref CodeBuildProject
              OutputArtifacts:
                - Name: BuildOutput
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: "1"
                Provider: ECS
              Configuration:
                ClusterName: !Ref Cluster
                ServiceName: !Ref Service
                FileName: imagedefinitions.json   
              InputArtifacts:
                - Name: BuildOutput                     
    DependsOn: EcrRepository

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Description: "Codebuild project to push simple app image to ecr"
      Environment:
        ComputeType:
          !FindInMap [CodeBuildComputeTypeMap, !Ref GithubBranch, type]
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: AWS_ECR_REPOSITORY_URI
            Value: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${EcrRepository}'
          - Name: IMAGE_REPO_NAME
            Value: "demo-cfn"
          - Name: IMAGE_TAG
            Value: "latest"
        Image: "aws/codebuild/standard:5.0"
        PrivilegedMode: true
        Type: "LINUX_CONTAINER"
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source:
        Type: "CODEPIPELINE"
        BuildSpec: buildspec.yml

  EcrRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: "demo-cfn"

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: "GetAndPutArtifacts"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                Resource:
                  - !GetAtt ArtifactBucket.Arn
                  - !Sub ${ArtifactBucket.Arn}/*
        - PolicyName: "StartCodeBuild"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                Resource:
                  - !GetAtt CodeBuildProject.Arn
        - PolicyName: "AllowECS-ECR"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - ecs:DescribeServices
                  - ecs:DescribeTaskDefinition
                  - ecs:DescribeTasks
                  - ecs:ListTasks
                  - ecs:RegisterTaskDefinition
                  - ecs:UpdateService   
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:PutImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload                
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: "PushImageToEcr"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:CompleteLayerUpload
                  - ecr:GetDownloadUrlForLayer
                  - ecr:InitiateLayerUpload
                  - ecr:PutImage
                  - ecr:UploadLayerPart
                  - ecr:GetAuthorizationToken
                Resource: "*"
        - PolicyName: "CodeBuildLogsRole"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*"
        - PolicyName: "GetAndPutArtifacts"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                Resource:
                  - !GetAtt ArtifactBucket.Arn
                  - !Sub ${ArtifactBucket.Arn}/*

  ArtifactBucket:
    Type: AWS::S3::Bucket

Outputs:
  ECRImageUri:
    Description: URI of the ECR image
    Value:
      Fn::Sub:
        - "${RepositoryUriName}:${ImageTag}"
        - RepositoryUriName:
            Fn::GetAtt:
              - EcrRepository
              - RepositoryUri
          ImageTag: latest

  PipelineUrl:
    Value: !Sub "https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}"
